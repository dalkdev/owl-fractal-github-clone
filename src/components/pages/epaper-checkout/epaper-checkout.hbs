<style>
  .container {
    max-width: 1000px;
    margin: 0 auto;
    min-height: 100vh;
    padding: 2rem;
  }

  .secure-badge {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: #10b981;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.875rem;
    font-weight: 500;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .product-card {
    background: linear-gradient(135deg, #0071A1 0%, #005a85 100%);
    border-radius: 1rem;
    padding: 2rem;
    color: white;
    margin-bottom: 2rem;
    position: relative;
    overflow: hidden;
  }

  .product-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1.5rem;
  }

  .product-icon {
    width: 60px;
    height: 60px;
    background: white;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #0071A1;
    font-size: 1.5rem;
    margin-right: 1rem;
  }

  .product-title {
    font-size: 1.5rem;
    font-weight: 700;
    margin: 0.5rem 0 0.25rem 0;
  }

  .product-description {
    opacity: 0.9;
    margin: 0;
  }

  .price-display {
    text-align: right;
  }

  .price-main {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0;
  }

  .price-period {
    opacity: 0.9;
    margin: 0;
  }

  .trial-badge {
    background: white;
    color: #0071A1;
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    text-align: center;
    font-weight: 600;
    margin-top: 1rem;
  }

  .checkout-section {
    background: white;
    border-radius: 1rem;
    padding: 2rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    margin-bottom: 2rem;
  }

  .section-title {
    font-size: 1.5rem;
    font-weight: 600;
    color: #0071A1;
    margin: 0 0 1.5rem 0;
  }

  .progress-bar {
    display: flex;
    align-items: center;
    margin-bottom: 2rem;
    gap: 1rem;
  }

  .progress-step {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .step-number {
    width: 32px;
    height: 32px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    font-size: 0.875rem;
  }

  .step-active {
    background: #0071A1;
    color: white;
  }

  .step-inactive {
    background: #d1d5db;
    color: #6b7280;
  }

  .step-line {
    width: 80px;
    height: 2px;
    background: #d1d5db;
  }

  .help-section {
    background: white;
    border-radius: 1rem;
    padding: 2rem;
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  .help-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #0071A1;
    margin: 0 0 1rem 0;
  }

  .help-contacts {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }

  .help-contact {
    background: #f8fafc;
    padding: 1rem;
    border-radius: 8px;
    text-align: center;
    text-decoration: none;
    color: inherit;
  }

  .help-contact:hover {
    background: #f1f5f9;
  }

  .payment-methods {
    display: flex;
    gap: 0.5rem;
    justify-content: center;
    margin-top: 2rem;
    flex-wrap: wrap;
  }

  .payment-method {
    background: #f59e0b;
    color: white;
    padding: 0.5rem 1rem;
    border-radius: 6px;
    font-size: 0.75rem;
    font-weight: 600;
  }

  .form-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #111827;
    margin-bottom: 1.5rem;
  }

  .form-group {
    margin-bottom: 1.5rem;
  }

  .form-label {
    display: block;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
    margin-bottom: 0.5rem;
  }

  .payment-element {
    padding: 1rem;
    border: 1px solid #d1d5db;
    border-radius: 8px;
    background: white;
    min-height: 120px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #6b7280;
    text-align: center;
  }

  .submit-button {
    width: 100%;
    padding: 1rem 1.5rem;
    background: linear-gradient(135deg, #0071A1 0%, #005a85 100%);
    color: white;
    font-weight: 600;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 1rem;
    gap: 0.5rem;
  }

  .submit-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  .submit-button:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 113, 161, 0.3);
  }

  @media (max-width: 768px) {
    .container {
      padding: 1rem;
    }

    .product-header {
      flex-direction: column;
      gap: 1rem;
    }

    .price-display {
      text-align: left;
    }

    .help-contacts {
      grid-template-columns: 1fr;
    }

    .progress-bar {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }

    .step-line {
      display: none;
    }

    .secure-badge {
      position: relative;
      top: auto;
      right: auto;
      margin-bottom: 1rem;
      align-self: flex-end;
    }
  }
</style>
<!-- pop up hidden willkommen zurück -->
<div id="auth-modal"
     class="nw-fixed nw-inset-0 nw-bg-black nw-bg-opacity-50 nw-flex nw-items-center nw-justify-center nw-z-50 nw-hidden">
  <div class="nw-bg-white nw-rounded-lg nw-shadow-xl nw-max-w-md nw-w-full nw-mx-4 nw-max-h-screen nw-overflow-y-auto">
    <div class="nw-p-6">
      <div class="nw-flex nw-items-center nw-justify-between nw-mb-6">
        <div class="nw-flex nw-items-center nw-space-x-2">
          <div class="nw-w-8 nw-h-8 nw-rounded-lg nw-flex nw-items-center nw-justify-center"
               style="background-color: #0071A1;">
            <span class="nw-text-white nw-font-bold nw-text-sm">HK</span>
          </div>
          <h2 class="nw-text-xl nw-font-bold nw-text-gray-900">Haller Kreisblatt</h2>
        </div>
        <button id="close-auth-modal" aria-label="Modal schließen"
                class="nw-text-gray-400 hover:nw-text-gray-600 nw-transition-colors">
          <svg class="nw-w-6 nw-h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>

      <div id="login-form" class="nw-space-y-6">
        <div class="nw-text-center nw-mb-6">
          <h3 class="nw-text-2xl nw-font-bold nw-text-gray-900 nw-mb-2">Willkommen zurück!</h3>
          <p class="nw-text-gray-600">Schön, dass Sie wieder da sind. Melden Sie sich an und lesen Sie weiter.</p>
        </div>

        <form id="login-form-submit">
          <div class="nw-space-y-4">
            <div>
              <label for="email" class="nw-block nw-text-sm nw-font-medium nw-text-gray-700 nw-mb-1">
                E-Mail-Adresse*
              </label>
              <input
                type="email"
                id="email"
                name="email"
                required
                class="nw-w-full nw-px-3 nw-py-2 nw-border nw-border-gray-300 nw-rounded-md nw-focus:outline-none nw-focus:ring-2 nw-focus:ring-blue-500 nw-focus:border-transparent"
                placeholder="ihre@email.de"
              >
            </div>

            <div>
              <label for="password" class="nw-block nw-text-sm nw-font-medium nw-text-gray-700 nw-mb-1">
                Passwort*
              </label>
              <input id="password" type="password" name="password" required
                     class="nw-w-full nw-px-3 nw-py-2 nw-border nw-border-gray-300 nw-rounded-md nw-focus:outline-none nw-focus:ring-2 nw-focus:ring-blue-500 nw-focus:border-transparent"
                     placeholder="Ihr Passwort">
            </div>

            <div class="nw-flex nw-items-center nw-justify-between">
              <div class="nw-flex nw-items-center">
                <input type="checkbox" id="remember" name="remember" class="nw-mr-2">
                <label for="remember" class="nw-text-sm nw-text-gray-600">
                  Angemeldet bleiben
                </label>
              </div>
              <button type="button" id="forgot-password-btn" class="nw-text-sm nw-underline hover:nw-no-underline"
                      style="color: #0071A1;">
                Passwort vergessen?
              </button>
            </div>

            <button type="submit"
                    class="nw-w-full nw-py-4 nw-px-4 nw-text-white nw-font-semibold nw-rounded-lg nw-transition-all nw-duration-200 hover:nw-opacity-90 nw-transform hover:nw-scale-105 nw-shadow-lg hover:nw-shadow-xl"
                    style="background: linear-gradient(135deg, #0071A1 0%, #005a85 100%);">
                            <span class="nw-flex nw-items-center nw-justify-center">
                                <svg class="nw-w-5 nw-h-5 nw-mr-2" fill="none" stroke="currentColor"
                                     viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1"></path>
                                </svg>
                                Anmelden und loslesen
                            </span>
            </button>
          </div>
        </form>

        <div class="nw-text-center nw-mt-6">
          <p class="nw-text-gray-600 nw-text-sm">
            Noch kein Konto?
            <button id="show-register-btn" class="nw-font-medium nw-underline hover:nw-no-underline"
                    style="color: #0071A1;">
              Jetzt registrieren
            </button>
          </p>
        </div>
      </div>

      <div id="register-form" class="nw-space-y-6 nw-hidden">
        <div class="nw-text-center nw-mb-6">
          <h3 class="nw-text-2xl nw-font-bold nw-text-gray-900 nw-mb-2">Ihr digitales Zeitungserlebnis startet
            hier!</h3>
          <p class="nw-text-gray-600">Erstellen Sie Ihr kostenloses Konto und starten Sie in wenigen Sekunden.</p>
        </div>

        <form id="register-form-submit">
          <div class="nw-space-y-4">
            <div class="nw-grid nw-grid-cols-2 nw-gap-4">
              <div>
                <label for="vorname" class="nw-block nw-text-sm nw-font-medium nw-text-gray-700 nw-mb-1">
                  Vorname*
                </label>
                <input id="vorname" type="text" name="firstName" required
                       class="nw-w-full nw-px-3 nw-py-2 nw-border nw-border-gray-300 nw-rounded-md nw-focus:outline-none nw-focus:ring-2 nw-focus:ring-blue-500 nw-focus:border-transparent"
                       placeholder="Max">
              </div>
              <div>
                <label for="nachname" class="nw-block nw-text-sm nw-font-medium nw-text-gray-700 nw-mb-1">
                  Nachname*
                </label>
                <input id="nachname" type="text" name="lastName" required
                       class="nw-w-full nw-px-3 nw-py-2 nw-border nw-border-gray-300 nw-rounded-md nw-focus:outline-none nw-focus:ring-2 nw-focus:ring-blue-500 nw-focus:border-transparent"
                       placeholder="Mustermann">
              </div>
            </div>

            <div>
              <label for="neuemail" class="nw-block nw-text-sm nw-font-medium nw-text-gray-700 nw-mb-1">
                E-Mail-Adresse*
              </label>
              <input id="neuemail" type="email" name="neuemail" required
                     class="nw-w-full nw-px-3 nw-py-2 nw-border nw-border-gray-300 nw-rounded-md nw-focus:outline-none nw-focus:ring-2 nw-focus:ring-blue-500 nw-focus:border-transparent"
                     placeholder="ihre@email.de">
            </div>

            <div>
              <label for="neupassword" class="nw-block nw-text-sm nw-font-medium nw-text-gray-700 nw-mb-1">
                Passwort*
              </label>
              <input id="neupassword" type="password" name="neupassword" required
                     class="nw-w-full nw-px-3 nw-py-2 nw-border nw-border-gray-300 nw-rounded-md nw-focus:outline-none nw-focus:ring-2 nw-focus:ring-blue-500 nw-focus:border-transparent"
                     placeholder="Mindestens 8 Zeichen">
            </div>

            <div>
              <label for="confirmPassword" class="nw-block nw-text-sm nw-font-medium nw-text-gray-700 nw-mb-1">
                Passwort bestätigen*
              </label>
              <input id="confirmPassword" type="password" name="confirmPassword" required
                     class="nw-w-full nw-px-3 nw-py-2 nw-border nw-border-gray-300 nw-rounded-md nw-focus:outline-none nw-focus:ring-2 nw-focus:ring-blue-500 nw-focus:border-transparent"
                     placeholder="Passwort wiederholen">
            </div>

            <div class="nw-space-y-3">
              <label for="acceptTerms" class="nw-flex nw-items-start">
                <input id="acceptTerms" type="checkbox" name="acceptTerms" required class="nw-mt-1 nw-mr-3">
                <span class="nw-text-sm nw-text-gray-700">
                                    Ich akzeptiere die <a href="/agb" class="nw-underline hover:nw-no-underline"
                                                          style="color: #0071A1;">Allgemeinen Geschäftsbedingungen</a> und die <a
                  href="/datenschutz" class="nw-underline hover:nw-no-underline" style="color: #0071A1;">Datenschutzerklärung</a>.*
                                </span>
              </label>

              <label for="newsletter" class="nw-flex nw-items-start">
                <input id="newsletter" type="checkbox" name="newsletter" class="nw-mt-1 nw-mr-3">
                <span class="nw-text-sm nw-text-gray-700">
                                    Ich möchte den kostenlosen Newsletter erhalten und über neue Angebote informiert werden.
                                </span>
              </label>
            </div>

            <button type="submit"
                    class="nw-w-full nw-py-4 nw-px-4 nw-text-white nw-font-semibold nw-rounded-lg nw-transition-all nw-duration-200 hover:nw-opacity-90 nw-transform hover:nw-scale-105 nw-shadow-lg hover:nw-shadow-xl"
                    style="background: linear-gradient(135deg, #0071A1 0%, #005a85 100%);">
                            <span class="nw-flex nw-items-center nw-justify-center">
                                <svg class="nw-w-5 nw-h-5 nw-mr-2" fill="none" stroke="currentColor"
                                     viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"></path>
                                </svg>
                                Kostenloses Konto erstellen
                            </span>
            </button>
          </div>
        </form>

        <div class="nw-text-center nw-mt-6">
          <p class="nw-text-gray-600 nw-text-sm">
            Bereits ein Konto?
            <button id="show-login-btn" class="nw-font-medium nw-underline hover:nw-no-underline"
                    style="color: #0071A1;">
              Anmelden
            </button>
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- -->
<div class="nw-min-h-screen" style="background: linear-gradient(135deg, #f0f8ff 0%, #e6f3ff 100%);">
  <a href="#main-content"
     class="nw-sr-only nw-sr-only-focusable nw-absolute nw-top-0 nw-left-0 nw-z-50 nw-bg-white nw-px-4 nw-py-2 nw-text-sm nw-font-medium nw-text-gray-900 nw-no-underline"
     style="color: #0071A1;">
    Zum Hauptinhalt springen
  </a>

  <main id="main-content" class="nw-max-w-4xl nw-mx-auto nw-px-4 sm:nw-px-6 nw-py-4 sm:nw-py-8" role="main"
        aria-label="E-Paper Bestellformular">
    <!--sicher bezahlen label -->
    <div class="nw-flex nw-justify-center sm:nw-justify-end nw-mb-4">
            <span
              class="nw-flex nw-items-center nw-bg-green-50 nw-px-3 sm:nw-px-4 nw-py-2 nw-rounded-full nw-text-sm nw-shadow-sm">
                <svg class="nw-w-4 nw-h-4 nw-mr-2 nw-text-green-600" fill="none" stroke="currentColor"
                     viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"></path>
                </svg>
                <span class="nw-font-medium nw-text-green-700">Sicher bezahlen</span>
            </span>
    </div>

    {{>@epaper-abo}}
    <!-- -->
    <div class="nw-bg-white nw-rounded-2xl nw-shadow-lg nw-p-4 sm:nw-p-6">
      <h2 class="nw-text-xl sm:nw-text-2xl nw-font-bold nw-mb-6 sm:nw-mb-8 nw-text-center sm:nw-text-left"
          style="color: #0071A1;">Ihre Bestellung</h2>

      <nav class="nw-flex nw-items-center nw-justify-between nw-mb-6 sm:nw-mb-8 nw-px-2 sm:nw-px-0" role="navigation"
           aria-label="Bestellvorgang">
        <div class="nw-flex nw-flex-col sm:nw-flex-row nw-items-center">
          <div
            class="nw-w-8 nw-h-8 sm:nw-w-10 sm:nw-h-10 nw-rounded-full nw-text-white nw-flex nw-items-center nw-justify-center nw-font-semibold nw-text-xs sm:nw-text-sm nw-shadow-md"
            style="background: linear-gradient(135deg, #0071A1 0%, #005a85 100%);" aria-current="step">
            1
          </div>
          <span class="nw-mt-1 sm:nw-mt-0 sm:nw-ml-3 nw-text-xs sm:nw-text-sm nw-font-medium nw-text-center"
                style="color: #0071A1;">Kunde</span>
        </div>

        <div id="progress-1-2" class="nw-flex-1 nw-h-1 nw-bg-gray-200 nw-mx-2 sm:nw-mx-4 nw-rounded-full nw-min-w-0" aria-hidden="true"></div>
        <div  class="nw-flex nw-flex-col sm:nw-flex-row nw-items-center">
          <div id="step-1-2" class="nw-w-8 nw-h-8 sm:nw-w-10 sm:nw-h-10 nw-rounded-full nw-bg-gray-200 nw-text-gray-500 nw-flex nw-items-center nw-justify-center
    nw-font-semibold nw-text-xs sm:nw-text-sm" style="">
            2
          </div>
          <span id="step-1-2-span"  class="nw-mt-1 sm:nw-mt-0 sm:nw-ml-3 nw-text-xs sm:nw-text-sm nw-font-medium nw-text-gray-500 nw-text-center" style="">Zahlung</span>
        </div>
        <div id="progress-2-3" class="nw-flex-1 nw-h-1 nw-bg-gray-200 nw-mx-2 sm:nw-mx-4 nw-rounded-full nw-min-w-0"
             aria-hidden="true"></div>
        <div  class="nw-flex nw-flex-col sm:nw-flex-row nw-items-center">
          <div id="step-2-3"
            class="nw-w-8 nw-h-8 sm:nw-w-10 sm:nw-h-10 nw-rounded-full nw-bg-gray-200 nw-text-gray-500 nw-flex nw-items-center nw-justify-center nw-font-semibold nw-text-xs sm:nw-text-sm">
            3
          </div>
          <span id="step-2-3-span"
            class="nw-mt-1 sm:nw-mt-0 sm:nw-ml-3 nw-text-xs sm:nw-text-sm nw-font-medium nw-text-gray-500 nw-text-center">Fertig</span>
        </div>
      </nav>
      <!-- step1 -->
      <!-- register step 1 -->
      <div class="">
        {{>@epaper-register-form}}
      </div>

      <!-- step2 -->
      <div id="step2-block" class="nw-bg-white nw-p-4 sm:nw-p-6 nw-hidden  ">
        <form id="hk-payment-form" class="payment-form" novalidate>
          <h3 class="form-title">Zahlungsinformationen</h3>

          <div class="form-group">
            <label class="form-label">Zahlungsart auswählen</label>
            <div style="display: grid; gap: 0.75rem;">
              <label
                style="display: flex; align-items: center; padding: 1rem; border: 2px solid #e5e7eb; border-radius: 8px; cursor: pointer; transition: all 0.2s;"
                class="payment-option" data-payment="card">
                <input type="radio" name="payment-method" value="card"
                       style="margin-right: 1rem; accent-color: #0071A1;" checked>
                <div style="display: flex; align-items: center; flex-grow: 1;">
                  <svg style="width: 24px; height: 24px; margin-right: 1rem; color: #0071A1;" fill="currentColor"
                       viewBox="0 0 24 24">
                    <path
                      d="M20 4H4c-1.11 0-1.99.89-1.99 2L2 18c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V6c0-1.11-.89-2-2-2zm0 14H4v-6h16v6zm0-10H4V6h16v2z" />
                  </svg>
                  <div>
                    <div style="font-weight: 500; color: #111827;">Kreditkarte</div>
                    <div style="font-size: 0.875rem; color: #6b7280;">Visa, Mastercard, American Express</div>
                  </div>
                </div>
                <div style="display: flex; gap: 0.25rem;">
                  <img src="https://img.icons8.com/color/24/visa.png" alt="Visa" style="width: 24px; height: 16px;">
                  <img src="https://img.icons8.com/color/24/mastercard.png" alt="Mastercard"
                       style="width: 24px; height: 16px;">
                  <img src="https://img.icons8.com/color/24/amex.png" alt="American Express"
                       style="width: 24px; height: 16px;">
                </div>
              </label>

              <label style="display: flex; align-items: center; padding: 1rem; border: 2px solid #e5e7eb; border-radius: 8px;
              cursor: pointer; transition: all 0.2s;" class="payment-option" data-payment="sepa">
                <input type="radio" name="payment-method" value="sepa"
                       style="margin-right: 1rem; accent-color: #0071A1;">
                <div style="display: flex; align-items: center; flex-grow: 1;">
                  <svg style="width: 24px; height: 24px; margin-right: 1rem; color: #0071A1;" fill="currentColor"
                       viewBox="0 0 24 24">
                    <path
                      d="M11.5 0C5.8 0 1 4.8 1 10.5S5.8 21 11.5 21 22 16.2 22 10.5 17.2 0 11.5 0zm0 19C6.9 19 3 15.1 3 10.5S6.9 2 11.5 2 20 5.9 20 10.5 16.1 19 11.5 19z" />
                    <path d="M7.5 7.5h8v1.5h-8zm0 3h8v1.5h-8zm0 3h5v1.5h-5z" />
                  </svg>
                  <div>
                    <div style="font-weight: 500; color: #111827;">SEPA-Lastschrift</div>
                    <div style="font-size: 0.875rem; color: #6b7280;">Abbuchung von Ihrem Bankkonto</div>
                  </div>
                </div>
                <div
                  style="background: #0071A1; color: white; padding: 0.25rem 0.5rem; border-radius: 4px; font-size: 0.75rem; font-weight: 500;">
                  SEPA
                </div>
              </label>

              <label
                style="display: flex; align-items: center; padding: 1rem; border: 2px solid #e5e7eb; border-radius: 8px; cursor: pointer; transition: all 0.2s;"
                class="payment-option" data-payment="paypal">
                <input type="radio" name="payment-method" value="paypal"
                       style="margin-right: 1rem; accent-color: #0071A1;">
                <div style="display: flex; align-items: center; flex-grow: 1;">
                  <svg style="width: 24px; height: 24px; margin-right: 1rem; color: #0070ba;" fill="currentColor"
                       viewBox="0 0 24 24">
                    <path
                      d="M7.076 21.337H2.47a.641.641 0 01-.633-.74L4.944.901C5.026.382 5.474 0 5.998 0h7.46c2.57 0 4.578.543 5.69 1.81 1.01 1.15 1.304 2.42 1.012 4.287-.023.143-.047.288-.077.437-.983 5.05-4.349 6.797-8.647 6.797h-2.19c-.524 0-.968.382-1.05.9l-1.12 7.106zm1.417-8.326h2.19c3.546 0 6.14-1.44 6.898-5.28l.077-.437c.246-1.564.047-2.54-.831-3.467C15.96 2.775 14.31 2.4 12.14 2.4H6.283c-.524 0-.968.382-1.05.9L3.94 13.011h2.553z" />
                  </svg>
                  <div>
                    <div style="font-weight: 500; color: #111827;">PayPal</div>
                    <div style="font-size: 0.875rem; color: #6b7280;">Schnell und sicher mit PayPal</div>
                  </div>
                </div>
                <img src="https://img.icons8.com/color/48/paypal.png" alt="PayPal" style="width: 32px; height: 20px;">
              </label>
            </div>

            <div id="payment-details" style="margin-top: 1rem;">
              <div id="card-details" style="display: none; margin-top:1rem;">
                <div style="display:grid; gap:1rem;">
                  <div>
                    <label for="card-number">Kartennummer *</label>
                    <input type="text" id="card-number" required aria-describedby="card-number-error"
                           style="width:100%; padding:0.75rem; border:1px solid #d1d5db; border-radius:6px;">
                    <span id="card-number-error" class="error-message" role="alert" aria-live="assertive"
                          style="color:#dc2626; font-size:0.875rem;"></span>
                  </div>
                  <div>
                    <label for="card-expiry">Gültig bis (MM/JJ) *</label>
                    <input type="text" id="card-expiry" required aria-describedby="card-expiry-error"
                           style="width:100%; padding:0.75rem; border:1px solid #d1d5db; border-radius:6px;">
                    <span id="card-expiry-error" class="error-message" role="alert" aria-live="assertive"
                          style="color:#dc2626; font-size:0.875rem;"></span>
                  </div>
                  <div>
                    <label for="card-cvc">CVC *</label>
                    <input type="text" id="card-cvc" required aria-describedby="card-cvc-error"
                           style="width:100%; padding:0.75rem; border:1px solid #d1d5db; border-radius:6px;">
                    <span id="card-cvc-error" class="error-message" role="alert" aria-live="assertive"
                          style="color:#dc2626; font-size:0.875rem;"></span>
                  </div>
                  <div>
                    <label for="card-holder">Karteninhaber *</label>
                    <input type="text" id="card-holder" required aria-describedby="card-holder-error"
                           style="width:100%; padding:0.75rem; border:1px solid #d1d5db; border-radius:6px;">
                    <span id="card-holder-error" class="error-message" role="alert" aria-live="assertive"
                          style="color:#dc2626; font-size:0.875rem;"></span>
                  </div>
                </div>
              </div>

              <div id="sepa-details" style="display: none; margin-top: 1rem;">
                <div style="display: grid; gap: 1rem;">
                  <!-- IBAN -->
                  <div>
                    <label for="iban">IBAN *</label>
                    <input type="text" id="iban" name="iban" required
                           aria-describedby="iban-error"
                           style="width:100%; padding:0.75rem; border:1px solid #d1d5db; border-radius:6px;">
                    <span id="iban-error" class="error-message" role="alert" aria-live="assertive"
                          style="color:#dc2626; font-size:0.875rem;"></span>
                  </div>
                  <!-- Kontoinhaber -->
                  <div>
                    <label for="account-holder">Kontoinhaber *</label>
                    <input type="text" id="account-holder" name="account-holder" required
                           aria-describedby="account-holder-error"
                           style="width:100%; padding:0.75rem; border:1px solid #d1d5db; border-radius:6px;">
                    <span id="account-holder-error" class="error-message" role="alert" aria-live="assertive"
                          style="color:#dc2626; font-size:0.875rem;"></span>
                  </div>
                  <!-- SEPA-Mandat -->
                  <div style="background:#f9fafb; padding:1rem; border-radius:6px; border:1px solid #e5e7eb;">
                    <h4 style="font-weight:500; color:#111827; margin-bottom:0.5rem;">SEPA‑Lastschriftmandat</h4>
                    <p style="font-size:0.875rem; color:#374151; margin-bottom:0.75rem;">
                      Ich ermächtige die Haller Kreisblatt GmbH & Co. KG, Zahlungen von meinem Konto mittels Lastschrift
                      einzuziehen.
                    </p>
                    <div style="display:flex; align-items:flex-start; gap:0.75rem;">
                      <input type="checkbox" id="sepa-mandate"
                             style="margin-top:2px; width:18px; height:18px; accent-color:#0071A1;">
                      <label for="sepa-mandate"
                             style="font-size:0.875rem; color:#374151; line-height:1.5; cursor:pointer;">
                        Ich erteile das SEPA‑Lastschriftmandat für wiederkehrende Zahlungen *
                      </label>
                    </div>
                    <span id="sepa-mandate-error" class="error-message" role="alert" aria-live="assertive"
                          style="color:#dc2626; font-size:0.875rem;"></span>
                  </div>
                </div>
              </div>


              <div id="paypal-details" style="display: none;">
                <div
                  style="background: #f0f9ff; padding: 1rem; border-radius: 6px; border: 1px solid #0ea5e9; margin-top: 1rem;">
                  <div style="display: flex; align-items: center;">
                    <svg style="width: 20px; height: 20px; color: #0369a1; margin-right: 0.5rem;" fill="currentColor"
                         viewBox="0 0 20 20">
                      <path fill-rule="evenodd"
                            d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
                            clip-rule="evenodd" />
                    </svg>
                    <p style="margin: 0; font-size: 0.875rem; color: #0369a1;">
                      Sie werden nach dem Klick auf "Jetzt bezahlen" zu PayPal weitergeleitet.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <div style="margin-bottom: 1.5rem;">
            <div style="display: flex; align-items: flex-start; margin-bottom: 1rem;">
              <input type="checkbox" id="hk-email-consent"
                     style="margin-right: 8px; width: 16px; height: 16px; accent-color: #0071A1; flex-shrink: 0;">
              <label for="hk-email-consent"
                     style="font-size: 0.875rem; color: #374151; line-height: 1.5; cursor: pointer; margin-top: -3px;">
                Ich bin jederzeit widerruflich damit einverstanden, dass mich die Haller Kreisblatt Verlags-GmbH, auch
                durch ihre Dienstleister, über ihre interessanten Verlagsprodukte und -angebote (Zeitungen,
                Zeitschriften, Abo, Leserreisen, Leservorteile, HK-Karte, Gewinnspiele, Newsletter) per E-Mail
                informiert.
              </label>
            </div>


            <div style="display: flex; align-items: flex-start; margin-bottom: 1.5rem;">
              <input type="checkbox" id="hk-terms-checkbox" required
                     style="margin-right: 8px; width: 16px; height: 16px; accent-color: #0071A1; flex-shrink: 0;"
                     aria-describedby="hk-terms-description">
              <label for="hk-terms-checkbox"
                     style="font-size: 0.875rem; color: #374151; line-height: 1.5; margin-top: -3px; cursor: pointer;"
                     id="hk-terms-description">
                Die <a href="https://www.haller-kreisblatt.de/agb" target="_blank" rel="noopener noreferrer"
                       style="color: #2563eb; text-decoration: underline;">AGB</a>, die
                <a href="https://www.haller-kreisblatt.de/widerruf" target="_blank" rel="noopener noreferrer"
                   style="color: #2563eb; text-decoration: underline;">
                  Widerrufserklärung
                </a> und die
                <a href="https://www.haller-kreisblatt.de/microsites/datenschutz" target="_blank"
                   rel="noopener noreferrer" style="color: #2563eb; text-decoration: underline;">
                  Datenschutzerklärung
                </a> hab ich gelesen und akzeptiert.
              </label>
            </div>
          </div>

          <button type="submit" id="hk-submit-button" class="submit-button" disabled>
                    <span id="hk-button-text" style="display: flex; align-items: center; gap: 0.5rem;">
                      Zahlungspflichtig bestellen
                    </span>
            <span id="hk-spinner" style="display: none; align-items: center; gap: 0.5rem;">
                        <svg style="animation: spin 1s linear infinite; width: 20px; height: 20px;" fill="none"
                             viewBox="0 0 24 24">
                            <circle style="opacity: 0.25;" cx="12" cy="12" r="10" stroke="currentColor"
                                    stroke-width="4"></circle>
                            <path style="opacity: 0.75;" fill="currentColor"
                                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        Wird verarbeitet...
                    </span>
          </button>
        </form>

      </div>
      <!-- step3 -->
      <div id="step3-block" class="nw-bg-white nw-p-4 sm:nw-p-6 nw-hidden">
        step 3
      </div>

    </div>

    <div id="step2-block" class="nw-bg-white nw-rounded-2xl nw-shadow-lg nw-p-6 nw-mt-6">
      <h3 class="nw-text-lg nw-font-semibold nw-mb-4" style="color: #0071A1;">BRAUCHEN SIE HILFE?</h3>

      {{>@kontakt-items}}
    </div>

    {{> @zahlen-methoden}}
  </main>
</div>
<script>

  function activateStep3() {
    // Schritt 3 Kreis + Label
    const step3Circle = document.getElementById('step-2-3');
    const step3Label = document.getElementById('step-2-3-span');

    if (step3Circle && step3Label) {
      step3Circle.style.background = 'linear-gradient(135deg, #0071A1 0%, #005a85 100%)';
      step3Circle.classList.remove('nw-bg-gray-200', 'nw-text-gray-500');
      step3Circle.classList.add('nw-text-white', 'nw-shadow-md');

      step3Label.classList.remove('nw-text-gray-500');
      step3Label.style.color = '#0071A1';
    }

    // Fortschrittslinie von Schritt 2 zu 3
    const progressBar2to3 = document.getElementById('progress-2-3');
    if (progressBar2to3) {
      progressBar2to3.style.background = 'linear-gradient(135deg, #0071A1 0%, #005a85 100%)';
    }

    // Schritt 2 verstecken
    const step2 = document.getElementById('step2-block');
    if (step2) step2.classList.add('nw-hidden');

    // Schritt 3 zeigen
    const step3 = document.getElementById('step3-block');
    if (step3) step3.classList.remove('nw-hidden');
  }

  function activateStep2() {
    // Schritt 2 Kreis + Label
    const step2Circle = document.getElementById('step-1-2');
    const step2Label = document.getElementById('step-1-2-span');
    step2Circle.style.background = 'linear-gradient(135deg, #0071A1 0%, #005a85 100%)';
    step2Circle.classList.remove('nw-bg-gray-200', 'nw-text-gray-500');
    step2Circle.classList.add('nw-text-white', 'nw-shadow-md');
    step2Label.classList.remove('nw-text-gray-500');
    step2Label.style.color = '#0071A1';

    // ✅ Fortschrittslinie per ID ansprechen
    const progressBar1to2 = document.getElementById('progress-1-2');
    if (progressBar1to2) {
      progressBar1to2.style.background = 'linear-gradient(135deg, #0071A1 0%, #005a85 100%)';
    }
    // Schritt 1 verstecken
    const step1 = document.getElementById('auth-step');
    if (step1) step1.classList.add('nw-hidden');
    // Schritt 2 zeigen
    const step2 = document.getElementById('step2-block');
    if (step2) step2.classList.remove('nw-hidden');
  }

  document.addEventListener('DOMContentLoaded', function() {

    // neu
    const customerTypeRadios = document.querySelectorAll('input[name="customer-type"]');
    const salutationField = document.getElementById('salutation');
    const salutationWrapper = document.getElementById('salutation-wrapper');
    const salutationError = document.getElementById('salutation-error');

    const firmaField = document.getElementById('firma');
    const firmaWrapper = document.getElementById('firma-wrapper');
    const firmaError = document.getElementById('firma-error');

    function updateSalutationVisibility() {
      const selected = document.querySelector('input[name="customer-type"]:checked')?.value;

      if (selected === 'business') {
        // Firma gewählt → Anrede ausblenden
        salutationWrapper.style.display = 'none';
        salutationField.value = '';
        salutationField.required = false;
        salutationField.classList.remove('nw-border-red-500');
        if (salutationError) {
          salutationError.textContent = '';
          salutationError.classList.add('nw-hidden');
        }

        // Firma anzeigen
        if (firmaWrapper) {
          firmaWrapper.style.display = '';
          firmaField.required = true;
        }

      } else {
        // Privatkunde → Anrede anzeigen
        salutationWrapper.style.display = '';
        salutationField.required = true;

        // Firma ausblenden
        if (firmaWrapper) {
          firmaWrapper.style.display = 'none';
          firmaField.value = '';
          firmaField.required = false;
        }
      }
    }

    // Event-Listener für Auswahländerung
    customerTypeRadios.forEach(radio => {
      radio.addEventListener('change', updateSalutationVisibility);
    });

    // Initialer Aufruf
    updateSalutationVisibility();

    // end neu

    'use strict';
    // Security: Prevent console access in production
    if (typeof console !== 'undefined' && window.location.hostname !== 'localhost') {
      console.log = console.warn = console.error = function() {
      };
    }
    // Security: Rate limiting for form submissions
    const rateLimiter = {
      attempts: 0,
      lastAttempt: 0,
      maxAttempts: 5,
      cooldownPeriod: 60000, // 1 minute
      canAttempt() {
        const now = Date.now();
        if (now - this.lastAttempt > this.cooldownPeriod) {
          this.attempts = 0;
        }
        return this.attempts < this.maxAttempts;
      },
      recordAttempt() {
        this.attempts++;
        this.lastAttempt = Date.now();
      },
      getRemainingTime() {
        const remaining = this.cooldownPeriod - (Date.now() - this.lastAttempt);
        return Math.ceil(remaining / 1000);
      }
    };

    // Security: Input sanitization
    function sanitizeInput(input) {
      if (typeof input !== 'string') return '';
      return input.replace(/[<>&"']/g, function(match) {
        const escapeMap = {
          '<': '&lt;',
          '>': '&gt;',
          '&': '&amp;',
          '"': '&quot;',
          '\'': '&#x27;'
        };
        return escapeMap[match];
      }).trim();
    }

    // Security: Enhanced email validation
    function validateEmail(email) {
      const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@(?:[a-zA-Z0-9-]+\.)+[a-zA-Z]{2,}$/;
      return emailRegex.test(email) && email.length <= 254;
    }

    // Security: Password strength validation
    function validatePassword(password) {
      if (password.length < 6 || password.length > 16) {
        return {
          valid: false,
          message: 'Passwort muss zwischen 6 und 16 Zeichen lang sein.'
        };
      }
      const hasUpperCase = /[A-Z]/.test(password);
      const hasLowerCase = /[a-z]/.test(password);
      const hasNumbers = /\d/.test(password);
      if (!hasUpperCase || !hasLowerCase || !hasNumbers) {
        return {
          valid: false,
          message: 'Passwort muss Groß- und Kleinbuchstaben sowie Zahlen enthalten.'
        };
      }
      return {
        valid: true,
        message: ''
      };
    }

    const passwordInput = document.getElementById('register-password');
    const errorMessage = document.getElementById('register-password-error');

    passwordInput.addEventListener('input', () => {
      const { valid, message } = validatePassword(passwordInput.value);

      if (valid) {
        errorMessage.textContent = '';
        errorMessage.classList.add('nw-hidden');
      } else {
        errorMessage.textContent = message;
        errorMessage.classList.remove('nw-hidden');
      }
    });

    // Security: CSRF token simulation
    function generateCSRFToken() {
      return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);
    }

    const csrfToken = generateCSRFToken();

    // Screen reader announcements for accessibility
    function announceToScreenReader(message) {
      const announcement = document.createElement('div');
      announcement.setAttribute('aria-live', 'polite');
      announcement.setAttribute('aria-atomic', 'true');
      announcement.className = 'nw-sr-only';
      announcement.textContent = message;
      document.body.appendChild(announcement);
      // Remove after announcement
      setTimeout(() => {
        if (announcement.parentNode) {
          announcement.parentNode.removeChild(announcement);
        }
      }, 1000);
    }

    const emailStep = document.getElementById('email-step');
    const loginStep = document.getElementById('login-step');
    const registrationStep = document.getElementById('registration-step');
    const continueBtn = document.getElementById('continue-btn');
    const emailInput = document.getElementById('auth-email');
    const loginEmail = document.getElementById('login-email');
    const registerEmail = document.getElementById('register-email');
    // Back buttons
    const backToEmailBtn = document.getElementById('back-to-email');
    const backToEmailFromRegisterBtn = document.getElementById('back-to-email-from-register');
    // Password toggles
    const togglePassword = document.getElementById('toggle-password');
    const toggleRegisterPassword = document.getElementById('toggle-register-password');
    const loginPassword = document.getElementById('login-password');
    const registerPassword = document.getElementById('register-password');
    // Submit buttons
    const loginBtn = document.getElementById('login-btn');
    const registerBtn = document.getElementById('register-btn');

    // Security: Secure SSO check function with proper validation
    async function checkSSOEmail(email) {
      if (!validateEmail(email)) {
        throw new Error('Ungültige E-Mail-Adresse');
      }
      // Security: Sanitize email before sending
      const sanitizedEmail = sanitizeInput(email);
      try {
        // In real implementation, this would be a secure API call with proper authentication
        const response = await fetch('/api/auth/check-email', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': csrfToken,
            'X-Requested-With': 'XMLHttpRequest'
          },
          body: JSON.stringify({
            email: sanitizedEmail,
            timestamp: Date.now()
          })
        });
        if (!response.ok) {
          throw new Error('Netzwerkfehler beim Prüfen der E-Mail');
        }
        const data = await response.json();
        return data.exists;
      } catch (error) {
        // Fallback to mock for development
        console.warn('Using mock SSO check due to:', error.message);
        return new Promise((resolve) => {
          setTimeout(() => {
            const existingEmails = [
              'test@haller-kreisblatt.de',
              'admin@haller-kreisblatt.de',
              'user@example.com'
            ];
            resolve(existingEmails.includes(sanitizedEmail.toLowerCase()));
          }, 500);
        });
      }
    }

    // Show steps
    function showStep(step) {
      emailStep.classList.add('nw-hidden');
      loginStep.classList.add('nw-hidden');
      registrationStep.classList.add('nw-hidden');
      step.classList.remove('nw-hidden');
    }

    // Continue button handler with security validation
    if (continueBtn && emailInput) {
      continueBtn.addEventListener('click', async function(e) {
        e.preventDefault();
        // Security: Rate limiting check
        if (!rateLimiter.canAttempt()) {
          alert(`Zu viele Versuche. Bitte warten Sie ${rateLimiter.getRemainingTime()} Sekunden.`);
          return;
        }
        const email = sanitizeInput(emailInput.value);
        const emailErrorText = document.getElementById('email-error');

// Reset visuelle Fehleranzeige
        emailInput.classList.remove('nw-border-red-500');
        emailErrorText?.classList.add('nw-hidden');

// Leere Eingabe prüfen
        if (!email) {
          emailInput.classList.add('nw-border-red-500');
          if (emailErrorText) {
            emailErrorText.textContent = 'Bitte geben Sie Ihre E-Mail-Adresse ein.';
            emailErrorText.classList.remove('nw-hidden');
          }
          return;
        }

// Ungültige E-Mail prüfen
        if (!validateEmail(email)) {
          emailInput.classList.add('nw-border-red-500');
          if (emailErrorText) {
            emailErrorText.textContent = 'Bitte geben Sie eine gültige E-Mail-Adresse ein.';
            emailErrorText.classList.remove('nw-hidden');
          }
          return;
        }

        // Security: Record attempt
        rateLimiter.recordAttempt();
        // Show loading state
        continueBtn.disabled = true;
        continueBtn.textContent = 'Prüfe E-Mail...';
        try {
          // Check if email exists in SSO
          const emailExists = await checkSSOEmail(email);
          if (emailExists) {
            // Show login form
            loginEmail.value = email;
            showStep(loginStep);
            setTimeout(() => loginPassword.focus(), 100);
          } else {
            // Show registration form
            registerEmail.value = email;
            showStep(registrationStep);
            setTimeout(() => registerPassword.focus(), 100);
          }
        } catch (error) {
          alert('Fehler beim Prüfen der E-Mail. Bitte versuchen Sie es erneut.');
          console.error('SSO check error:', error);
        } finally {
          continueBtn.disabled = false;
          continueBtn.textContent = 'Weiter';
        }
      });
      // Enter key support with security validation
      emailInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
          e.preventDefault();
          continueBtn.click();
        }
      });
      // Security: Prevent paste of malicious content
      emailInput.addEventListener('paste', function(e) {
        setTimeout(() => {
          this.value = sanitizeInput(this.value);
        }, 0);
      });
    }
    // Back button handlers
    if (backToEmailBtn) {
      backToEmailBtn.addEventListener('click', function() {
        showStep(emailStep);
        emailInput.focus();
      });
    }
    if (backToEmailFromRegisterBtn) {
      backToEmailFromRegisterBtn.addEventListener('click', function() {
        showStep(emailStep);
        emailInput.focus();
      });
    }
    // Password toggle handlers
    if (togglePassword && loginPassword) {
      togglePassword.addEventListener('click', function() {
        const type = loginPassword.type === 'password' ? 'text' : 'password';
        loginPassword.type = type;
        // Update icon
        const svg = togglePassword.querySelector('svg');
        if (type === 'text') {
          svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.542-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>';
        } else {
          svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>';
        }
      });
    }
    if (toggleRegisterPassword && registerPassword) {
      toggleRegisterPassword.addEventListener('click', function() {
        const type = registerPassword.type === 'password' ? 'text' : 'password';
        registerPassword.type = type;
        // Update icon
        const svg = toggleRegisterPassword.querySelector('svg');
        if (type === 'text') {
          svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.542-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>';
        } else {
          svg.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>';
        }
      });
    }
    // Login button handler with security validation
    if (loginBtn) {
      loginBtn.addEventListener('click', async function(e) {
        e.preventDefault();
        // Security: Rate limiting check
        if (!rateLimiter.canAttempt()) {
          alert(`Zu viele Versuche. Bitte warten Sie ${rateLimiter.getRemainingTime()} Sekunden.`);
          return;
        }
        const password = sanitizeInput(loginPassword.value);
        if (!password) {
          alert('Bitte geben Sie Ihr Passwort ein.');
          return;
        }
        // Security: Record attempt
        rateLimiter.recordAttempt();
        // Show loading state
        loginBtn.disabled = true;
        loginBtn.textContent = 'Anmelden...';
        try {
          // Security: Secure API call with proper authentication
          const response = await fetch('/api/auth/login', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': csrfToken,
              'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({
              email: sanitizeInput(loginEmail.value),
              password: password, // Password should be hashed on server
              timestamp: Date.now()
            })
          });
          if (!response.ok) {
            throw new Error('Login fehlgeschlagen');
          }
          const data = await response.json();
          if (data.success) {
            alert('Anmeldung erfolgreich! Weiter zur Zahlungsauswahl...');
            // Here you would proceed to next step
          } else {
            alert(data.message || 'Anmeldung fehlgeschlagen');
          }
        } catch (error) {
          console.warn('Using mock login due to:', error.message);
          // Mock login for development
          setTimeout(() => {
            alert('Anmeldung erfolgreich! Weiter zur Zahlungsauswahl...');
          }, 1000);
        } finally {
          loginBtn.disabled = false;
          loginBtn.textContent = 'Anmelden';
        }
      });
    }
    // Register button handler with security validation
    if (registerBtn) {
      registerBtn.addEventListener('click', async function(e) {
        e.preventDefault();

        //neu

        const selectedCustomerType = document.querySelector('input[name="customer-type"]:checked')?.value;

        if (selectedCustomerType === 'business') {
          salutationWrapper.style.display = 'none';
          salutationField.required = false;

          firmaWrapper.style.display = '';
          firmaField.required = true;
        } else {
          salutationWrapper.style.display = '';
          salutationField.required = true;

          firmaWrapper.style.display = 'none';
          firmaField.required = false;
        }

        // end

        // Security: Rate limiting check
        if (!rateLimiter.canAttempt()) {
          alert(`Zu viele Versuche. Bitte warten Sie ${rateLimiter.getRemainingTime()} Sekunden.`);
          return;
        }

          //neu
        const requiredFields = {
          'register-password': 'Passwort',
          ...(selectedCustomerType !== 'business' && { 'salutation': 'Anrede' }),
          ...(selectedCustomerType === 'business' && { 'firma': 'Firma' }),
          'first-name': 'Vorname',
          'last-name': 'Nachname',
          'street': 'Straße & Nr.',
          'postal-code': 'PLZ',
          'city': 'Ort'
        };

        // end
        const sanitizedData = {};
        let firstErrorField = null;

        function setError(field, message) {
          field.classList.add('nw-border-red-500');
          const errorElem = document.getElementById(field.id + '-error');
          if (errorElem) {
            errorElem.textContent = message;
            errorElem.classList.remove('nw-hidden');
          }
        }

        function clearError(field) {
          field.classList.remove('nw-border-red-500');
          const errorElem = document.getElementById(field.id + '-error');
          if (errorElem) {
            errorElem.textContent = '';
            errorElem.classList.add('nw-hidden');
          }
        }

        // Clear all errors first
        for (const fieldId of Object.keys(requiredFields)) {
          const field = document.getElementById(fieldId);
          if (field) clearError(field);
        }
        clearError(registerPassword);
        // Password validation
        const password = sanitizeInput(registerPassword.value);
        clearError(registerPassword);
        const passwordValidation = validatePassword(password);
        if (!passwordValidation.valid) {
          setError(registerPassword, passwordValidation.message);
          if (!firstErrorField) firstErrorField = registerPassword;
        }

        // Validate required fields
        for (const [fieldId, fieldName] of Object.entries(requiredFields)) {
          const field = document.getElementById(fieldId);
          const value = sanitizeInput(field?.value || '');
          if (!value) {
            setError(field, 'Dieses Feld ist erforderlich');
            if (!firstErrorField) firstErrorField = field;
            continue;
          }
          if (fieldId === 'postal-code' && !/^\d{5}$/.test(value)) {
            setError(field, 'PLZ muss aus 5 Ziffern bestehen.');
            if (!firstErrorField) firstErrorField = field;
            continue;
          }
          if ((fieldId === 'first-name' || fieldId === 'last-name') && value.length < 2) {
            setError(field, `${fieldName} muss mindestens 2 Zeichen lang sein.`);
            if (!firstErrorField) firstErrorField = field;
            continue;
          }
          sanitizedData[fieldId] = value;
        }


        if (firstErrorField) {
          firstErrorField.focus();
          return;
        }

        // Security: Record attempt
        rateLimiter.recordAttempt();

        // Show loading state
        registerBtn.disabled = true;
        registerBtn.textContent = 'Registrierung...';

        try {
          const response = await fetch('/api/auth/register', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'X-CSRF-Token': csrfToken,
              'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({
              ...sanitizedData,
              email: sanitizeInput(registerEmail.value),
              password: password, // Password should be hashed on server
              customerType: document.querySelector('input[name="customer-type"]:checked')?.value || 'private',
              country: sanitizeInput(document.getElementById('country')?.value || 'DE'),
              phone: sanitizeInput(document.getElementById('phone')?.value || ''),
              birthDate: sanitizeInput(document.getElementById('birth-date')?.value || ''),
              timestamp: Date.now()
            })
          });

          if (!response.ok) {
            throw new Error('Registrierung fehlgeschlagen');
          }
          const data = await response.json();

          if (data.success) {
            alert('Registrierung erfolgreich! Weiter zur Zahlungsauswahl...');
            // Hier weitere Schritte
            activateStep2();
          } else {
            alert(data.message || 'Registrierung fehlgeschlagen');
          }

        } catch (error) {
          console.warn('Using mock registration due to:', error.message);
          setTimeout(() => {
            alert('Registrierung erfolgreich! Weiter zur Zahlungsauswahl...');
            activateStep2();
          }, 1000);
        } finally {
          registerBtn.disabled = false;
          registerBtn.innerHTML = 'Weiter <svg class="nw-w-4 nw-h-4 nw-ml-2 nw-inline" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path></svg>';
        }
      });
    }

    // E-Paper details toggle functionality with accessibility
    const toggleButton = document.getElementById('toggleDetails');
    const expandedDetails = document.getElementById('expandedDetails');
    if (toggleButton && expandedDetails) {
      const toggleIcon = toggleButton.querySelector('svg');
      toggleButton.addEventListener('click', function() {
        const isExpanded = !expandedDetails.classList.contains('nw-hidden');
        if (isExpanded) {
          // Collapse
          expandedDetails.classList.add('nw-hidden');
          toggleIcon.style.transform = 'rotate(0deg)';
          toggleButton.setAttribute('aria-expanded', 'false');
          toggleButton.setAttribute('aria-label', 'Details einblenden');
          expandedDetails.setAttribute('aria-hidden', 'true');
          announceToScreenReader('Details ausgeblendet');
        } else {
          // Expand
          expandedDetails.classList.remove('nw-hidden');
          toggleIcon.style.transform = 'rotate(180deg)';
          toggleButton.setAttribute('aria-expanded', 'true');
          toggleButton.setAttribute('aria-label', 'Details ausblenden');
          expandedDetails.setAttribute('aria-hidden', 'false');
          announceToScreenReader('Details eingeblendet');
        }
      });
      // Keyboard support for toggle
      toggleButton.addEventListener('keydown', function(e) {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          toggleButton.click();
        }
      });
    }
    // Security: Additional protection measures
    // Prevent form resubmission on page refresh
    if (window.history.replaceState) {
      window.history.replaceState(null, null, window.location.href);
    }
    // Security: Disable right-click context menu on sensitive areas
    document.addEventListener('contextmenu', function(e) {
      if (e.target.type === 'password' || e.target.type === 'email') {
        e.preventDefault();
      }
    });
    // Security: Prevent form data from being cached
    window.addEventListener('beforeunload', function() {
      // Clear sensitive form data
      const sensitiveFields = ['auth-email', 'login-password', 'register-password', 'login-email', 'register-email'];
      sensitiveFields.forEach(id => {
        const field = document.getElementById(id);
        if (field) field.value = '';
      });
    });
    // Security: Monitor for suspicious activity
    let keyloggerDetection = {
      keyCount: 0,
      startTime: Date.now(),
      checkSuspiciousActivity() {
        const now = Date.now();
        const timeDiff = now - this.startTime;
        if (timeDiff < 1000 && this.keyCount > 50) {
          console.warn('Suspicious rapid keystrokes detected');
          // In production, this would trigger additional security measures
        }
        if (timeDiff > 5000) {
          this.keyCount = 0;
          this.startTime = now;
        }
      }
    };
    document.addEventListener('keydown', function() {
      keyloggerDetection.keyCount++;
      keyloggerDetection.checkSuspiciousActivity();
    });
    // Security: Prevent copying of sensitive information
    document.addEventListener('copy', function(e) {
      const selection = window.getSelection().toString();
      if (selection.includes('@') || selection.length > 20) {
        console.warn('Copy attempt detected for potential sensitive data');
        // In production, this might block the copy or log the event
      }
    });
    // Security: Add security headers via meta tags (for browsers that support it)
    const securityMeta = document.createElement('meta');
    securityMeta.httpEquiv = 'Content-Security-Policy';
    securityMeta.content = 'default-src \'self\'; script-src \'self\' \'unsafe-inline\'; style-src \'self\' \'unsafe-inline\'; img-src \'self\' data:; font-src \'self\'; connect-src \'self\'; frame-src \'none\'; object-src \'none\';';
    document.head.appendChild(securityMeta);
    // Security: Form validation on all input changes
    const allInputs = document.querySelectorAll('input, select');
    allInputs.forEach(input => {
      input.addEventListener('input', function() {
        this.value = sanitizeInput(this.value);
      });
      input.addEventListener('blur', function() {
        this.value = sanitizeInput(this.value);
      });
    });
    console.log('Security measures initialized');
  });
  // Load mobile interactions
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize mobile-specific features
    if (window.innerWidth < 768) {
      // Add mobile-specific classes
      document.body.classList.add('nw-mobile-optimized');
      // Enhanced touch feedback
      const buttons = document.querySelectorAll('button, input[type="button"], input[type="submit"]');
      buttons.forEach(button => {
        button.addEventListener('touchstart', function() {
          this.style.transform = 'scale(0.95)';
        });
        button.addEventListener('touchend', function() {
          this.style.transform = 'scale(1)';
        });
      });
      // Prevent double-tap zoom
      let lastTouchEnd = 0;
      document.addEventListener('touchend', function(event) {
        const now = (new Date()).getTime();
        if (now - lastTouchEnd <= 300) {
          event.preventDefault();
        }
        lastTouchEnd = now;
      }, false);
      // Auto-scroll to inputs when keyboard opens
      const inputs = document.querySelectorAll('input, textarea, select');
      inputs.forEach(input => {
        input.addEventListener('focus', function() {
          setTimeout(() => {
            this.scrollIntoView({
              behavior: 'smooth',
              block: 'center'
            });
          }, 300);
        });
      });
    }
  });
</script>

<!-- step2 acript -->

<script>
  // Payment method switching
  document.addEventListener('DOMContentLoaded', function() {
    const paymentOptions = document.querySelectorAll('.payment-option');
    const cardDetails = document.getElementById('card-details');
    const sepaDetails = document.getElementById('sepa-details');
    const paypalDetails = document.getElementById('paypal-details');

    // Style selected payment option
    function updatePaymentOptionStyles() {
      paymentOptions.forEach(option => {
        const radio = option.querySelector('input[type="radio"]');
        if (radio.checked) {
          option.style.borderColor = '#0071A1';
          option.style.backgroundColor = '#f0f9ff';
        } else {
          option.style.borderColor = '#e5e7eb';
          option.style.backgroundColor = 'white';
        }
      });
    }

    // Show/hide payment details based on selection
    function showPaymentDetails(paymentType) {
      cardDetails.style.display = 'none';
      sepaDetails.style.display = 'none';
      paypalDetails.style.display = 'none';
      switch (paymentType) {
        case 'card':
          cardDetails.style.display = 'block';
          break;
        case 'sepa':
          sepaDetails.style.display = 'block';
          break;
        case 'paypal':
          paypalDetails.style.display = 'block';
          break;
      }
    }

    // Initialize payment options
    paymentOptions.forEach(option => {
      const radio = option.querySelector('input[type="radio"]');
      // Handle option click
      option.addEventListener('click', function() {
        radio.checked = true;
        const paymentType = radio.value;
        showPaymentDetails(paymentType);
        updatePaymentOptionStyles();
      });
      // Handle radio change
      radio.addEventListener('change', function() {
        const paymentType = this.value;
        showPaymentDetails(paymentType);
        updatePaymentOptionStyles();
      });
    });
    // Initialize with first option selected
    updatePaymentOptionStyles();
    showPaymentDetails('card');
    // Form validation
    const form = document.getElementById('hk-payment-form');
    const submitButton = document.getElementById('hk-submit-button');
    const termsCheckbox = document.getElementById('hk-terms-checkbox');

    function updateSubmitButton() {
      if (termsCheckbox.checked) {
        submitButton.disabled = false;
        submitButton.style.opacity = '1';
      } else {
        submitButton.disabled = true;
        submitButton.style.opacity = '0.5';
      }
    }

    termsCheckbox.addEventListener('change', updateSubmitButton);
    // Initialize submit button state
    updateSubmitButton();
    // Form submission
    form.addEventListener('submit', function(event) {
      event.preventDefault();
      if (!termsCheckbox.checked) {
        alert('Bitte akzeptieren Sie die AGB, Widerrufserklärung und Datenschutzerklärung.');
        return;
      }
      // Get selected payment method
      const selectedPayment = document.querySelector('input[name="payment-method"]:checked').value;
      // Validate required fields based on payment method
      let isValid = true;
      /*  let errorMessage = '';
       if (selectedPayment === 'card') {
         const cardInputs = cardDetails.querySelectorAll('input');
         cardInputs.forEach(input => {
           if (!input.value.trim()) {
             isValid = false;
             input.style.borderColor = '#dc2626';
           } else {
             input.style.borderColor = '#d1d5db';
           }
         });
         if (!isValid) errorMessage = 'Bitte füllen Sie alle Kreditkarten-Felder aus.';
       } */
      if (selectedPayment === 'card') {
        isValid = true;

        const fields = cardDetails.querySelectorAll('input[type="text"]');
        fields.forEach(input => {
          const err = document.getElementById(input.id + '-error');
          input.removeAttribute('aria-invalid');
          err.textContent = '';
          input.style.borderColor = '#d1d5db';

          if (!input.value.trim()) {
            isValid = false;
            input.setAttribute('aria-invalid', 'true');
            err.textContent = 'Dieses Feld ist erforderlich.';
            input.style.borderColor = '#dc2626';
          }
        });

        if (!isValid) {
          const firstInvalid = document.querySelector('[aria-invalid="true"]');
          if (firstInvalid) firstInvalid.focus();
          return;
        }
      }

     /*  if (selectedPayment === 'sepa') {
        const sepaInputs = sepaDetails.querySelectorAll('input[type="text"]');
        const sepaMandate = document.getElementById('sepa-mandate');
        sepaInputs.forEach(input => {
          if (!input.value.trim()) {
            isValid = false;
            input.style.borderColor = '#dc2626';
          } else {
            input.style.borderColor = '#d1d5db';
          }
        });
        if (!sepaMandate.checked) {
          isValid = false;
          errorMessage = 'Bitte erteilen Sie das SEPA-Lastschriftmandat.';
        } else if (!isValid) {
          errorMessage = 'Bitte füllen Sie alle SEPA-Felder aus.';
        }
      }
      if (!isValid) {
        alert(errorMessage);
        return;
      } */
      if (selectedPayment === 'sepa') {
        let isValid = true;

        const inputs = sepaDetails.querySelectorAll('input[type="text"]');
        inputs.forEach(input => {
          const err = document.getElementById(input.id + '-error');
          input.removeAttribute('aria-invalid');
          err.textContent = '';
          input.style.borderColor = '#d1d5db';

          if (!input.value.trim()) {
            isValid = false;
            input.setAttribute('aria-invalid', 'true');
            err.textContent = 'Dieses Feld ist erforderlich.';
            input.style.borderColor = '#dc2626';
          }
        });

        const mandate = document.getElementById('sepa-mandate');
        const mandateErr = document.getElementById('sepa-mandate-error');
        mandateErr.textContent = '';
        if (!mandate.checked) {
          isValid = false;
          mandateErr.textContent = 'Bitte erteilen Sie das SEPA‑Lastschriftmandat.';
        }

        if (!isValid) {
          const firstInvalid = document.querySelector('[aria-invalid="true"]');
          if (firstInvalid) {
            firstInvalid.focus();
          } else {
            mandate.focus();
          }
          return;
        }
      }
      // Show loading state
      const buttonText = document.getElementById('hk-button-text');
      const spinner = document.getElementById('hk-spinner');
      buttonText.style.display = 'none';
      spinner.style.display = 'flex';
      submitButton.disabled = true;
      // Simulate payment processing
      setTimeout(() => {
        alert('Zahlung erfolgreich! Sie erhalten in Kürze eine Bestätigungsmail.');
        activateStep3();
        // Reset button state (in real implementation, redirect to success page)
        buttonText.style.display = 'flex';
        spinner.style.display = 'none';
        submitButton.disabled = false;
        updateSubmitButton();
      }, 2000);
    });
  });
  // Spinner animation
  const style = document.createElement('style');
  style.textContent = `
            @keyframes spin {
                to { transform: rotate(360deg); }
            }
        `;
  document.head.appendChild(style);
</script>
<style>
  /* Security: Prevent form field highlighting for screenshots */
  input[type="password"],
  input[type="email"] {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  input[type="password"]::-ms-reveal {
    display: none;
  }

  /* Security: Prevent autocomplete styling leakage */
  input:-webkit-autofill,
  input:-webkit-autofill:hover,
  input:-webkit-autofill:focus {
    -webkit-box-shadow: 0 0 0 30px white inset !important;
    -webkit-text-fill-color: #374151 !important;
  }

  /* Security: Hide sensitive content during print */
  @media print {

    input[type="password"],
    input[type="email"] {
      visibility: hidden;
    }
  }

  /* CRITICAL FIX: Ensure button visibility and override accessibility CSS conflicts */
  #continue-btn,
  #login-btn,
  #register-btn {
    background: linear-gradient(135deg, #0071A1 0%, #005a85 100%) !important;
    color: white !important;
    border: none !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  #continue-btn:focus,
  #login-btn:focus,
  #register-btn:focus {
    background: linear-gradient(135deg, #005a85 0%, #004a6d 100%) !important;
    color: white !important;
    outline: 2px solid #0071A1 !important;
    outline-offset: 2px !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  #continue-btn:hover,
  #login-btn:hover,
  #register-btn:hover {
    background: linear-gradient(135deg, #005a85 0%, #004a6d 100%) !important;
    color: white !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  /* Ensure back buttons are visible */
  #back-to-email,
  #back-to-email-from-register {
    background: white !important;
    color: #374151 !important;
    border: 1px solid #d1d5db !important;
    opacity: 1 !important;
    visibility: visible !important;
  }

  #back-to-email:focus,
  #back-to-email-from-register:focus {
    background: #f9fafb !important;
    color: #374151 !important;
    outline: 2px solid #0071A1 !important;
    outline-offset: 2px !important;
    opacity: 1 !important;
    visibility: visible !important;
  }
</style>